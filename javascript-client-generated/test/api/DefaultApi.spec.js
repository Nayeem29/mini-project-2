/*
 * Dentist Appointment API
 * API for managing Dentist Appointment
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DentistAppointmentApi);
  }
}(this, function(expect, DentistAppointmentApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DentistAppointmentApi.DefaultApi();
  });

  describe('(package)', function() {
    describe('DefaultApi', function() {
      describe('dentistAppointmentAppointmentIdDelete', function() {
        it('should call dentistAppointmentAppointmentIdDelete successfully', function(done) {
          // TODO: uncomment, update parameter values for dentistAppointmentAppointmentIdDelete call
          /*

          instance.dentistAppointmentAppointmentIdDelete(appointmentId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('dentistAppointmentAppointmentIdGet', function() {
        it('should call dentistAppointmentAppointmentIdGet successfully', function(done) {
          // TODO: uncomment, update parameter values for dentistAppointmentAppointmentIdGet call and complete the assertions
          /*

          instance.dentistAppointmentAppointmentIdGet(appointmentId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DentistAppointmentApi.DentistAppointment);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('dentistAppointmentAppointmentIdPut', function() {
        it('should call dentistAppointmentAppointmentIdPut successfully', function(done) {
          // TODO: uncomment, update parameter values for dentistAppointmentAppointmentIdPut call
          /*

          instance.dentistAppointmentAppointmentIdPut(body, appointmentId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('dentistAppointmentDelete', function() {
        it('should call dentistAppointmentDelete successfully', function(done) {
          // TODO: uncomment dentistAppointmentDelete call
          /*

          instance.dentistAppointmentDelete(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('dentistAppointmentGet', function() {
        it('should call dentistAppointmentGet successfully', function(done) {
          // TODO: uncomment dentistAppointmentGet call and complete the assertions
          /*

          instance.dentistAppointmentGet(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            let dataCtr = data;
            expect(dataCtr).to.be.an(Array);
            expect(dataCtr).to.not.be.empty();
            for (let p in dataCtr) {
              let data = dataCtr[p];
              expect(data).to.be.a(DentistAppointmentApi.DentistAppointmentList);
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('dentistAppointmentPost', function() {
        it('should call dentistAppointmentPost successfully', function(done) {
          // TODO: uncomment, update parameter values for dentistAppointmentPost call
          /*

          instance.dentistAppointmentPost(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('dentistAppointmentPut', function() {
        it('should call dentistAppointmentPut successfully', function(done) {
          // TODO: uncomment, update parameter values for dentistAppointmentPut call
          /*

          instance.dentistAppointmentPut(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('dentistAppointmentSearchGet', function() {
        it('should call dentistAppointmentSearchGet successfully', function(done) {
          // TODO: uncomment, update parameter values for dentistAppointmentSearchGet call and complete the assertions
          /*
          var opts = {};

          instance.dentistAppointmentSearchGet(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            let dataCtr = data;
            expect(dataCtr).to.be.an(Array);
            expect(dataCtr).to.not.be.empty();
            for (let p in dataCtr) {
              let data = dataCtr[p];
              expect(data).to.be.a(DentistAppointmentApi.DentistAppointment);
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
